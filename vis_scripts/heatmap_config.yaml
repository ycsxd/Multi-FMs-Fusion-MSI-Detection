# CUDA_VISIBLE_DEVICES=0,1 python create_heatmaps.py --config config_template.yaml
--- 
exp_arguments:
  # name tag for saving generated figures and assets
  save_exp_code: HEATMAP_OUTPUT 
  # where to save final heatmaps
  save_dir: heatmaps/heatmap_production_results
  batch_size: 256
data_arguments: 
  # wsi paths need to be in a csv file with a column named 'wsi_path'
  wsi_csv: C:/Users/guoweis/Desktop/MIL_BASELINE-main/testdata/test/plot/fold_8/plot.csv
  # preset file for segmentation/patching
  preset: presets/bwh_biopsy.csv                
patching_arguments:
  # arguments for patching
  patch_size: 224
  overlap: 0.5
  patch_level: 1
  custom_downsample: 1
encoder_arguments:
  # arguments for the pretrained encoder model
  model_name: conch # currently support: ['vit_s_imagenet','resnet50_imagenet','plip','conch','uni','ctranspath','gigapath','virchow','virchow_v2','conch_v1_5']
  model_weights_dir: I:/sgw/checkpoint/pytorch_model_giga.bin # directory containing model weights
  target_img_size: 224 # resize images to this size before feeding to encoder
model_arguments: 
  # arguments for initializing mil-model from checkpoint
  yaml_path: C:/Users/guoweis/Desktop/MIL_BASELINE-main/testdata/test/plot/fold_8-giga-891/Test_CLAM_MB_MIL.yaml 
  ckpt_path: C:/Users/guoweis/Desktop/MIL_BASELINE-main/testdata/test/plot/fold_8-giga-891/Best_EPOCH_11.pth
heatmap_arguments:
  # downsample at which to visualize heatmap (-1 refers to downsample closest to 32x downsample)
  vis_level: 1
  # transparency for overlaying heatmap on background (0: background only, 1: foreground only)
  alpha: 0.4
  # whether to use a blank canvas instead of original slide
  blank_canvas: false
  # whether to also save the original H&E image
  save_orig: true
  # file extension for saving heatmap/original image
  save_ext: jpg
  # whether to calculate percentile scores in reference to the set of non-overlapping patches
  use_ref_scores: true
  # whether to use gaussian blur for further smoothing
  blur: false
  # whether to shift the 4 default corner points for checking if a patch is inside a foreground contour
  use_center_shift: true
  # whether to only compute heatmap for ROI specified by x1, x2, y1, y2
  use_roi: false 
  # whether to calculate heatmap with specified overlap (by default, coarse heatmap without overlap is always calculated)
  calc_heatmap: true
  # whether to binarize attention scores
  binarize: false
  # binarization threshold: (0, 1)
  binary_thresh: -1
  # factor for downscaling the heatmap before final dispaly
  custom_downsample: 1
  cmap: jet
sample_arguments:
  samples:
    - name: "topk_high_attention"
      sample: true
      seed: 42
      k: 15 # save top-k patches
      mode: topk
    - name: "topk_low_attention"
      sample: true
      seed: 42
      k: 15 # save bottom-k patches
      mode: reverse_topk